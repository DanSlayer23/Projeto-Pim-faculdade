import json as js
import webbrowser
import os, win32com.client
from datetime import datetime 



data = {}
usuario = None
score_python = 0
score_cyber = 0
score_tic = 0
resposta = ""
idade = 0
time = datetime.now().isoformat()

def lgpd():
    while True:
        try:
            lgpd = input("Você aceita compartilhar seus dados?: ")
            if lgpd.lower() in {"sim", "s", "ss", "yes"}:
                #menu()
                break
            elif lgpd.lower() in {"não", "nao", "n", "nn", "nao"}:
                print("Você deve aceitar para podermos continuar.")
            else:
                print("Resposta inválida. Por favor, responda 'sim' ou 'não'.")
        except:
            break

def idade():
    global idade
    try:
        idade = int(input("Digite sua idade: "))
    except:
        print("Você deve inserir um valor numérico.")
        idade()


def load_data():
    global data, usuario, resposta, idade, score_tic, score_cyber, score_python, time
    try:
        with open('package.json', 'r') as f:
            data = js.load(f)
            for usuario in data:
                if not isinstance(data[usuario], dict):
                    data[usuario] = {"password": data[usuario],
                                     "data_criacao": time,
                                     "score_python": score_python,
                                     "score_cyber": score_cyber,
                                     "score_tic": score_tic,
                                     "resposta": resposta,
                                     "idade": idade}
    except js.JSONDecodeError:
        data = {}
    except FileNotFoundError:
        data = {}

def save_data():
    with open('package.json', 'w') as f:
        js.dump(data, f, indent=4)

def pprint():
    print('=' * 60)

def pg_python():
    global score_python
    perguntas = [
        {
            "pergunta": "1. Qual destas é a forma correta de imprimir algo em Python?",
            "opcoes": ["A) echo 'Olá'", "B) print('Olá')", "C) printf('Olá') "],
            "resposta_correta": "B"
        },
        {
            "pergunta": "2. Qual tipo de dado representa números inteiros em Python?",
            "opcoes": ["A) str", "B) float", "C) int "],
            "resposta_correta": "C"
        },
        {
            "pergunta": "3. Como você começa um bloco condicional em Python?",
            "opcoes": ["A) if x == 10 then:", "B) if x == 10:", "C) if(x == 10) "],
            "resposta_correta": "B"
        },
        {
            "pergunta": "4. Qual símbolo é usado para comentários de linha única?",
            "opcoes": ["A) <!--", "B) //", "C) # "],
            "resposta_correta": "C"
        },
        {
            "pergunta": "5. Qual função converte uma string em número inteiro?",
            "opcoes": ["A) str()", "B) float()", "C) int() "],
            "resposta_correta": "C"
        }
    ]
    for p in perguntas:
        print(p["pergunta"])
        for opcao in p["opcoes"]:
            print(opcao)
        resposta = input("Sua resposta: ").upper()
        if resposta == p["resposta_correta"]:
            data[usuario]['score_python'] = data[usuario].get('score_python', 0) + 2
            print("\033[1;32mCorreto! +2 Pontos\033[m\n")
            save_data()
        else:
            print(f"\033[1;31mErrado! A resposta certa é {p['resposta_correta']}\033[m\n")

    print(f'Você acertou um total de:', data[usuario]['score_python'], 'pontos de 10')

def pg_cibersegurança():
    global score_cyber
    perguntas = [
        {
            "pergunta": "1. Qual é o principal objetivo da cibersegurança?",
            "opcoes": [
                "A) Aumentar a velocidade da internet",
                "B) Facilitar o acesso a dados pessoais",
                "C) Proteger sistemas e dados contra ataques cibernéticos",
                "D) Criar novos softwares"
            ],
            "resposta_correta": "C"
        },
        {
            "pergunta": "2. Quando começa a segurança de um aplicativo?",
            "opcoes": [
                "A) Após a instalação do programa",
                "B) Na fase de projeto do software",
                "C) Durante o uso pelo usuário",
                "D) Após uma falha de segurança"
            ],
            "resposta_correta": "B"
        },
        {
            "pergunta": "3. O que é protegido pela segurança de rede?",
            "opcoes": [
                "A) Redes de computadores contra invasores e malware",
                "B) A aparência dos aplicativos",
                "C) Dados pessoais em dispositivos móveis",
                "D) E-mails enviados por usuários"
            ],
            "resposta_correta": "A"
        },
        {
            "pergunta": "4. Qual é o foco da segurança operacional?",
            "opcoes": [
                "A) Proteger senhas de Wi-Fi",
                "B) Atualizar aplicativos regularmente",
                "C) Controlar o acesso e o uso de dados",
                "D) Bloquear todos os acessos externos"
            ],
            "resposta_correta": "C"
        },
        {
            "pergunta": "5. Por que a educação do usuário final é importante?",
            "opcoes": [
                "A) Porque usuários podem causar falhas por descuido",
                "B) Para evitar atualizações automáticas",
                "C) Para ensinar a programar",
                "D) Porque melhora o design dos aplicativos"
            ],
            "resposta_correta": "A"
        }
    ]
    for p in perguntas:
        print(p["pergunta"])
        for opcao in p["opcoes"]:
            print(opcao)
        resposta = input("Sua resposta: ").upper()
        if resposta == p["resposta_correta"]:
            data[usuario]['score_cyber'] = data[usuario].get('score_cyber', 0) + 2
            print("\033[1;32mCorreto! +2 Pontos\033[m\n")
            save_data()
        else:
            print(f"\033[1;31mErrado! A resposta certa é {p['resposta_correta']}\033[m\n")

    print(f'Você acertou um total de:', data[usuario]['score_cyber'], 'pontos de 10')

def pg_tic():
    global score_tic
    perguntas = [
        {
            "pergunta": "1. Qual foi uma das principais inovações que permitiu o armazenamento de informações na Antiguidade?",
            "opcoes": ["A) Computadores mecânicos ", "B) Escrita ", "C) Telégrafo "],
            "resposta_correta": "B"
        },
        {
            "pergunta": "2.  Qual dos itens a seguir faz parte da infraestrutura de TIC como elemento de segurança?",
            "opcoes": ["A) Modem ", "B) Sistema Operacional ", "C) Antivírus "],
            "resposta_correta": "C"
        },
        {
            "pergunta": "3. Qual dispositivo é usado principalmente para entrada de dados em um computador?",
            "opcoes": ["A) Teclado ", "B) Monitor ", "C) Impressora "],
            "resposta_correta": "A"
        },
        {
            "pergunta": "4. Qual das alternativas representa uma aplicação prática das TIC na educação?",
            "opcoes": ["A) Quadro negro tradicional ", "B) Caderno de anotações ", "C) Plataforma de ensino online "],
            "resposta_correta": "C"
        },
        {
            "pergunta": "5.  Qual dessas opções é um exemplo de software?",
            "opcoes": ["A) Placa-mãe ", "B) Navegador de internet ", "C) Pen drive "],
            "resposta_correta": "B"
        }
    ]
    for p in perguntas:
        print(p["pergunta"])
        for opcao in p["opcoes"]:
            print(opcao)
        resposta = input("Sua resposta: ").upper()
        if resposta == p["resposta_correta"]:
            data[usuario]['score_tic'] = data[usuario].get('score_tic', 0) + 2
            print("\033[1;32mCorreto! +2 Pontos\033[m\n")
            save_data()
        else:
            print(f"\033[1;31mErrado! A resposta certa é {p['resposta_correta']}\033[m\n")

    print(f'Você acertou um total de:', data[usuario]['score_tic'], 'de 10')

def novo_login():
    global idade, usuario, time
    while True:
        usuario_input = input("Digite seu usuário: ").strip().lower()
        if not usuario_input:
            print("Usuário não pode ser vazio!")
            continue
        if len(usuario_input) <= 5:
            print("Usuário não pode ser menor que 6 caracteres!")
            continue

        if usuario_input in data:
            print("Usuário já existe! Tente novamente.")
            continue

        password = input("Digite sua senha: ")

        if password.isalpha() or password.isnumeric():
            print("Sua senha deve variar entre números e letras!")
            continue
        if not password:
            print("Sua senha não pode ser vazia!")
            continue
        if len(password) <= 7:
            print("Sua senha não pode ter menos de 8 caracteres!")
            continue
        if password.islower() or password.isupper():
            print("Sua senha deve variar entre letras máiusculas e minusculas.")
            continue
        idade()
        lgpd()
        print("Conta criada com sucesso!")
        usuario = usuario_input
        data[usuario] = {
            "password": password,
            "idade": idade,
            "score_python": 0,
            "score_cyber": 0,
            "score_tic": 0,
            "data_criacao": time,
            "login_inicio": time,
            "login_final": ""
        }
        menu()
        save_data()
        break

def login_inicial():
    ask = input("Primerio acesso? ")
    if ask.lower() in {"sim", "s", "ss", "yes"}:
        load_data()
        novo_login()
        
    elif ask.lower() in {"não", "n", "no", "nao", "nn"}:
        login_existente()
    else:
        print("Opção inválida, escolha sim ou não.")
        login_inicial()

def login_existente():
    global usuario
    while True:
        username = input("Digite seu usuário: ").strip().lower()
        password = input("Digite sua senha: ").strip()

        if username in data and data[username]["password"] == password:
            usuario = username
            data[usuario]['login_inicio'] = datetime.now().isoformat()
            data[usuario]['login_final'] = ""
            print(f"Login bem-sucedido! Pontuação atual:\n"
                  f"Python = {data[usuario]['score_python']}\n"
                  f"Cybersegurança = {data[usuario]['score_cyber']}\n"
                  f"TIC = {data[usuario]['score_tic']} ")
            save_data()
            menu()
            break
        else:
            print("Usuário ou senha incorretos!")
            choice = input("Deseja criar uma nova conta?: ").lower()
            if choice in {'s', 'sim', 'y', 'yes'}:
                novo_login()
                break
            elif choice in {'n', 'não', 'no'}:
                continue
            else:
                print("Opção inválida!")

def menu():
    global usuario
    while True:
        print('═' * 50)
        print('   🎌 \033[1;35m𝓑𝓮𝓶-𝓥𝓲𝓷𝓭𝓸 𝓪𝓸 𝓒𝓾𝓻𝓼𝓸\033[m 🎌'.center(50))
        print('   👨‍💻\033[1;35m𝓢𝓪𝓶𝓾𝓻𝓪𝓲 𝓭𝓪 𝓣𝓮𝓬𝓷𝓸𝓵𝓸𝓰𝓲𝓪\033[m👩‍💻'.center(50))
        print('═' * 50)
        print()
        print('📚[1]\033[1;34;33m Tecnologia da Informação\033[m')
        print('💻[2]\033[1;34;33m Programação Básica\033[m')
        print('🔒[3]\033[1;32;33m Cibersegurança\033[m')
        print('⭐[4]\033[1;33;33m Pontos do Usuário\033[m')
        print('🚪[5]\033[1;36;33m Logout (sair)\033[m')
        print()

        escolha = input('🔎\033[1;34;33m Escolha uma opção:\033[m ')

        if escolha == '1':
            pprint()
            print('😁👍 \033[1;34;32mBem vindo ao curso de Tecnologia da Informação \033[m👨‍💻👨‍💻!!!')
            pprint()
            print('\033[1;34;32mAqui você vai aprender tudo relacionado a Tecnologia da Informação!!!\033[m')
            input('😝 \033[1;34;32mVocê está indo para o conteúdo!\033[m ')
            abrir_link(url_1)
            print()
            print('\033[1;34;32mAgora você vai responder uma série de 5 perguntas valendo nota!!\033[m')
            input('\033[1;34;32mPronto? (pressione Enter)')
            input('\033[1;34;31mAtenção! Se você já respondeu esse quiz, ele será reiniciado.\033[m')
            data[usuario]['score_tic']= 0
            save_data()
            pprint()
            pg_tic()
            print()

        elif escolha == '2':
            pprint()
            print('😁👍\033[1;34;34m Bem vindo ao curso de Programação com Python\033[m 👨!!!')
            pprint()
            print('\033[1;34;34mAqui você vai ver e aprender alguns níveis de programação utilizando Python!!\033[m')
            input('😁 \033[1;34;34mVocê está saindo para o conteúdo!\033[m ')
            abrir_link(url_2)
            print()
            print('\033[1;34;34mAgora você vai responder uma série de 5 perguntas valendo nota!!\033[m')
            input('\033[1;34;34mPronto? (pressione Enter)')
            input('\033[1;34;34mAtenção! Se você já respondeu esse quiz, ele será reiniciado.\033[m')
            data[usuario]['score_python'] = 0
            save_data()
            pprint()
            pg_python()
            print()

        elif escolha == '3':
            pprint()
            print('😁👍 \033[1;34;35mBem vindo ao curso de CIBERSEGURANÇA!\033[m 😁👍')
            pprint()
            print('\033[1;34;35mAqui você vai aprender algumas coisas fundamentais de Cibersegurança\033[m 👨‍💻😬🤖👾')
            slides = input('🤖 \033[1;34;35mVocê está saindo para o conteúdo!\033[m ')
            abrir_link(url_3)
            print()
            print('\033[1;34;35mAgora você vai responder uma série de 5 perguntas valendo nota!!\033[m')
            input('\033[1;34;35mPronto? (pressione Enter)')
            input('\033[1;34;35mAtenção! Se você já respondeu esse quiz, ele será reiniciado.\033[m')
            data[usuario]['score_cyber'] = 0
            save_data()
            pprint()
            pg_cibersegurança()
            print()

        elif escolha == '4':
            if usuario:
                print(f"\033[1;34;32mSua pontuação atual de python é: {data[usuario]['score_python']}\033[m")
                print(f"\033[1;34;32mSua pontuação atual de cyber é: {data[usuario]['score_cyber']}\033[m")
                print(f"\033[1;34;32mSua pontuação atual de tic é: {data[usuario]['score_tic']}\033[m")
            else:
                print("Nenhum usuário logado.")

        elif escolha == '5':
            data[usuario]['login_final'] = datetime.now().isoformat()
            usuario = None
            pprint()
            print(' \033[1;35m-----VOCÊ ESTÁ SAINDO!!-----\033[m')
            print('\n\033[1;32mCRIADORES:\033[m '
                  '\n\033[1;32mJoão Acerbi\033[m 😋'
                  '\n\033[1;32mRafael Botti \033[m😴'
                  '\n\033[1;32mEduardo \033[m🤓'
                  '\n\033[1;32mAdriano Dias\033[m 😇'
                  '\n\033[1;32mDanilo Azevedo \033[m😜')
            pprint()
            print('\033[1;32mAbrindo Outlook para lançar dados no gráfico!\033[m')
            pprint()
            send_email_with_attachments()
            pprint()
            input('\033[1;44;30mPRESSIONE ENTER PARA SAIR\033[m')
            break
        else:
            print('❌\033[1;41;30m Opção inválida. Tente novamente.\033[m')
            menu()

def send_email_with_attachments():
    try:
        outlook = win32com.client.Dispatch("Outlook.Application")
        mail = outlook.CreateItem(0)

        mail.To = "eduardo.cavalca@aluno.unip.br"
        mail.Subject = "Arquivo Json - PIM"
        mail.Body = "Segue o arquivo de dados em anexo."
        attachment_path = os.path.abspath("user_data.json")
        mail.Attachments.Add(attachment_path)

        mail.Send()

        print("E-mail enviado com sucesso.")

    except Exception as e:
        print(f"Erro ao enviar e-mail: {str(e)}")
        print("Verifique se o Outlook está instalado e configurado corretamente.")


def abrir_link(link):
    try:
        webbrowser.open(link)
        print(f"Abrindo {link} no navegador...")
    except Exception as e:
        print(f"Erro ao abrir o link: {e}")


def main():
    load_data()
    login_inicial()

    if usuario:
        menu()

if __name__ == "__main__":
# tic
    url_1 = ' https://www.canva.com/design/DAGmVNkTz6s/Nw9HxeLA9sWK-lWPMTRbKA/edit?utm_content=DAGmVNkTz6s&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton'
# python
    url_2 = ' https://www.canva.com/design/DAGmg29Sync/cserOYjEX5rpqnCcO392zw/edit'
# cibersegurança
    url_3 = ' https://www.canva.com/design/DAGmU45HLHQ/62BUS6sfueew9wDdhNNVEw/edit?utm_content=DAGmU45HLHQ&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton'

    main()
    save_data()
